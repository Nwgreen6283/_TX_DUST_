---
title: "cor"
format:
  pdf:
    theme: default
header-includes:
    - \usepackage{caption}
---

**This code creates a correlation matrix to look at relationships between variables. This helps identify specific relationships of interest**

[Link](http://www.sthda.com/english/wiki/correlation-matrix-a-quick-start-guide-to-analyze-format-and-visualize-a-correlation-matrix-using-r-software):

# Getting Started

#### Libraries

```{r, include= FALSE}
library(tidyverse)
library(here)
library(Hmisc)#Cor Tables and Lag
library(corrplot) #Cor Plots
library(lubridate) #For dates
library(ggpubr) #Plot stacking
library(kableExtra)
library(naniar)
library(corrtable) #This is a good package for making corrleation tables as opposed to matrices
```

#### Data

Site data sets have lags incorporated (made in `MASTER_MAKER.qmd`)

```{r, include = FALSE}
bo<- read_csv(here("data", "processed_data", "bo_master_daily.csv"))
c2<- read_csv(here("data", "processed_data", "c2_master_daily.csv"))
rd<- read_csv(here("data", "processed_data", "rd_master_daily.csv"))
sp<- read_rds(here("data", "processed_data", "qpcr", "species_copies.rds")) #species specific copiesv
```

# Cleaning

#### Remove non-numeric variables

```{r}
bo<- 
  bo %>%
  select(!c(...1, date, Vp))

c2<- 
  c2 %>%
  select(!c( ...1, date, hf_copies_mL))

rd<- 
  rd %>%
  select(!c(...1, date, hf_copies_mL))
```

#### Rename Copies --> Vibrio

```{r}
bo<- 
  bo %>%
  rename("Total Vibrio" = "copies_mL",
         "Chlorophyl a" = "chl",
         "Salinity" = "sal",
         "Temperature" = "temp",
         "Dissolved Oxygen (mg/L)" = "do_mgl",
         "Dissolved Oxygen (%)" = "do_per",
         "Secchi" = "secchi",
         "Ammonium" = "amm",
         "Nitrate+Nitrite" = "nn",
         "Orthophosphate" = "orthop",
         "Silicate" = "sil",
         "DIN" = "din",
         "DIN:DIP" = "din_dip",
         "TDN" = "tdn",
         "DON" = "don",
         "DOC" = "doc",
         "TOC" = "toc",
         "TN" = "tn",
         "Dust" = "dust",
         "Dust_Lag" = "dust_lag",
         "Avg CFU" = "cfu_tot",
         "HF183" = "hf_copies_mL",
         "Total Bacteria" = "tot_bacteria",
         "Yellow CFU"  = "cfu_yel",
         "Green CFU" = "cfu_gre")

c2<- 
  c2 %>%
  rename("Total Vibrio" = "copies_mL",
         "Chlorophyl a" = "chl",
         "Salinity" = "sal",
         "Temperature" = "temp",
         "Dissolved Oxygen (mg/L)" = "do_mgl",
         "Dissolved Oxygen (%)" = "do_per",
         "Secchi" = "secchi",
         "Ammonium" = "amm",
         "Nitrate+Nitrite" = "nn",
         "Orthophosphate" = "orthop",
         "Silicate" = "sil",
         "DIN" = "din",
         "DIN:DIP" = "din_dip",
         "TDN" = "tdn",
         "DON" = "don",
         "DOC" = "doc",
         "TOC" = "toc",
         "TN" = "tn",
         "Dust" = "dust",
         "Dust_Lag" = "dust_lag",
         "Avg CFU" = "cfu_tot",
         "Total Bacteria" = "tot_bacteria",
         "Yellow CFU"  = "cfu_yel",
         "Green CFU" = "cfu_gre")

rd<- 
  rd %>%
  rename("Total Vibrio" = "copies_mL",
         "Chlorophyl a" = "chl",
         "Salinity" = "sal",
         "Temperature" = "temp",
         "Dissolved Oxygen (mg/L)" = "do_mgl",
         "Dissolved Oxygen (%)" = "do_per",
         "Secchi" = "secchi",
         "Ammonium" = "amm",
         "Nitrate+Nitrite" = "nn",
         "Orthophosphate" = "orthop",
         "Silicate" = "sil",
         "DIN" = "din",
         "DIN:DIP" = "din_dip",
         "TDN" = "tdn",
         "DON" = "don",
         "DOC" = "doc",
         "TOC" = "toc",
         "TN" = "tn",
         "Dust" = "dust",
         "Dust_Lag" = "dust_lag",
         "Avg CFU" = "cfu_tot",
         "Total Bacteria" = "tot_bacteria",
         "Yellow CFU"  = "cfu_yel",
         "Green CFU" = "cfu_gre")
```

#### 

# Correlation Matrix

There are different methods for **correlation analysis** : **Pearson parametric correlation test**, **Spearman** and **Kendall** rank-based **correlation analysis**. The default is [pearson correlation coefficient](http://www.sthda.com/english/wiki/correlation-test-between-two-variables) which measures the linear **dependence** between two variables. [kendall and spearman](http://www.sthda.com/english/wiki/correlation-test-between-two-variables) correlation methods are non-parametric **rank-based correlation test**.

#### 1. Make Function to Format

Simple function for formatting a **correlation matrix** into a table with 4 columns containing : Column 1 : row names (variable 1 for the correlation test), Column 2 : column names (variable 2 for the correlation test), Column 3 : the **correlation coefficients**, Column 4 : the **p-values** of the correlations

```{r}
flattenCorrMatrix <- function(cormat, pmat) {
  ut <- upper.tri(cormat)
  data.frame(
    row = rownames(cormat)[row(cormat)[ut]],
    column = rownames(cormat)[col(cormat)[ut]],
    cor  =(cormat)[ut],
    p = pmat[ut])}
```

#### 2. Make Matrix

The function **rcorr()** \[in **Hmisc** package\] can be used to compute the **significance levels** for **pearson** and **spearman correlations**. It returns both the correlation coefficients and the p-value of the correlation for all possible pairs of columns in the data table.

**NOTE THIS IS WITH DATA SETS PRIOR TO LOG TRANSFORMATION. SO EVERYTHING SPEARMANS.**

```{r}
bclean<- rcorr(as.matrix(bo))
flattenCorrMatrix(bclean$r, bclean$P)

cclean<- rcorr(as.matrix(c2))
flattenCorrMatrix(cclean$r, cclean$P)

rclean<- rcorr(as.matrix(rd))
flattenCorrMatrix(rclean$r, rclean$P)
```

# Tables

#### Table: Env, Spp, Total

This is using Spearman's for all. This [Correlation Function](https://paulvanderlaken.com/2020/07/28/publication-ready-correlation-matrix-significance-r/) uses a df as opposed to a matrix, so it is more user friendly for making tables.

p\* = \< 0.05 // \*\* = \< 0.01 // \*\*\* = \<0.001

\captionsetup[table]{labelformat=empty}

```{r}
bo_table<-
  kable(as.data.frame(correlation_matrix(bo, type = "spearman", digits = 2)) %>%
  select(c(`Vc `, `Vv `, `Total Vibrio `, `Chlorophyl a `, `Avg CFU `, `HF183 `, `VAI ` )),
   # filter(!row_number() %in% c(1:4)),
  caption = "Blind Oso: Correlations between Environmental and Biological Variables using Spearman's Rank correlations")

c2_table<-
  kable(as.data.frame(correlation_matrix(c2, type = "spearman", digits = 2)) %>%
  select(c(`Vc `, `Vv `, `Vp `, `Total Vibrio `, `Chlorophyl a `, `Avg CFU `, `VAI `)),
  #  filter(!row_number() %in% c(1:5)),
  caption = "Canals: Correlations between Environmental and Biological Variables using Spearman's Rank correlations")

rd_table<-
  kable(as.data.frame(correlation_matrix(rd, type = "spearman", digits = 2)) %>%
  select(c(`Vc `, `Vv `, `Vp `, `Total Vibrio `, `Chlorophyl a `, `Avg CFU `, `VAI `)),
    #filter(!row_number() %in% c(1:5)),
  caption = "Gulf: Correlations between Environmental and Biological Variables using Spearman's Rank correlations")

bo_table
c2_table
rd_table
```

#### Matrix: Env, Sp, Total

##### Create Matrix for all environmental parameters, species, and total vibrio

```{r, include = FALSE}
bo_2<- rcorr(as.matrix(bo))
flattenCorrMatrix(bo_2$r, bo_2$P)
diag(bo_2$P) <- 0

c2_2<- rcorr(as.matrix(c2))
flattenCorrMatrix(c2_2$r, c2_2$P)
diag(c2_2$P) <- 0

rd_2<- rcorr(as.matrix(rd))
flattenCorrMatrix(rd_2$r, rd_2$P)
diag(rd_2$P) <- 0
```

#### Table: Species, Total, Chl

```{r}
bo_table2<-
  kable(as.data.frame(correlation_matrix(bo, type = "spearman", digits = 2)) %>%
  select(1:4,22) %>%
    filter(row_number() %in% c(26,27)),
  caption = "Blind Oso: Correlations between Dust Depsoition and Biological Variables using Spearman's Rank correlations")

c2_table2<-
  kable(as.data.frame(correlation_matrix(c2, type = "spearman", digits = 2)) %>%
  select(1:5,23) %>%
    filter(row_number() %in% c(27,28)),
  caption = "Canals: Correlations between Dust Depsoition and Biological Variables using Spearman's Rank correlations")

rd_table2<-
  kable(as.data.frame(correlation_matrix(rd, type = "spearman", digits = 2)) %>%
  select(1:5,23) %>%
    filter(row_number() %in% c(27,28)),
  caption = "Gulf: Correlations between Dust Depsoition and Biological Variables using Spearman's Rank correlations")

bo_table2
c2_table2
rd_table2

```

It's also possible to **combine correlogram with the significance test**. We'll use the result *res.cor2* generated in the previous section with **rcorr**() function \[in **Hmisc** package\]:

We get errors but still get the corrplot

Stack overflow: In the vignette for package 'corrplot' it says "We can get p-value matrix...by cor.mtest()...". The output of that function produces a p-values matrix with zeroes on the diagonal. The output of rcorr produces a matrix of p-values with NA on the diagonal. Maybe you can just replace your NA diagonal values with zeroes. If you switch to cor.mtest() you'll need to be sure and understand all of its parameters.

<!--# If you get error about row ot matching, just switch out of Visual Editor and back in-->

```{r, fig.width=9, fig.height=9}
#Single out factors of interst by making them red
#colors<- c("#ba4716", "#ba4716","#ba4716","#ba4716", "#ba4716","black","black","black","black","black","black","black","black","black","black","black","black","black","black","black","black","black","black","black", "black")

#BLIND OSO
corrplot(bo_2$r, type="upper", 
         tl.col = "black",
         p.mat = bo_2$P, sig.level = 0.05, insig = "blank",
         title = "Blind Oso", mar = c(0,0,1,0)) 

#CANALS

corrplot(c2_2$r, type="upper", 
         tl.col = "black", 
         p.mat = c2_2$P, sig.level = 0.05, insig = "blank",
         title = "Canals", mar = c(0,0,1,0))

#GULF

corrplot(rd_2$r, type="upper", 
         tl.col = "black",
         p.mat = rd_2$P, sig.level = 0.05, insig = "blank",
         title = "Gulf", mar = c(0,0,1,0))
```

#### 

---
title: "Untitled"
format:
  html:
    theme: default
---

#### LIbs

```{r}
library(tidyverse)
library(here)
library(Hmisc)#Cor Tables and Lag
library(corrplot) #Cor Plots
library(lubridate) #For dates
library(ggpubr) #Plot stacking
library(kableExtra)
library(naniar)
library(corrtable) #This is a good package for making corrleation tables as opposed to matri
```

#### Data

```{r, include = FALSE}
b<- read_csv(here('data', 'processed_data', 'z_score', 'bo_delta.csv'))
c<- read_csv(here('data', 'processed_data', 'z_score', 'c2_delta.csv'))
r<- read_csv(here('data', 'processed_data', 'z_score', 'rd_delta.csv'))
```

# Clean

**Rename**

```{r}
b<-
  b %>%
  rename(
    "Dissolved Oxygen" = "DO_mgL",
    "Chlorophyl a" = "Chl_a",
    "DIN:DIP" ="DIN_DIP",
    "Dust" = "dust",
    'Dust_Lag' = 'dust_lag',
    'Nitrate+Nitrite'= 'NO2NO3',
    'Total Bacteria' = 'tot_bacteria',
    'Total Vibrio' = 'copies_mL',
    'Total CFU' = 'cfu_tot',
    'HF183' = 'hf_copies_mL',
    'TSS' = 'tss') %>%
  select(!c(cfu_yel, cfu_gre))

r<-
  r %>%
  rename(
    "Dissolved Oxygen" = "DO_mgL",
    "Chlorophyl a" = "Chl_a",
    "DIN:DIP" ="DIN_DIP",
    "Dust" = "dust",
    'Dust_Lag' = 'dust_lag',
    'Nitrate+Nitrite'= 'NO2NO3',
    'Total Bacteria' = 'tot_bacteria',
    'Total Vibrio' = 'copies_mL',
    'Total CFU' = 'cfu_tot',
    'TSS' = 'tss') %>%
  select(!c(cfu_yel, cfu_gre))

c<-
  c %>%
  rename(
    "Dissolved Oxygen" = "DO_mgL",
    "Chlorophyl a" = "Chl_a",
    "DIN:DIP" ="DIN_DIP",
    "Dust" = "dust",
    'Dust_Lag' = 'dust_lag',
    'Nitrate+Nitrite'= 'NO2NO3',
    'Total Bacteria' = 'tot_bacteria',
    'Total Vibrio' = 'copies_mL',
    'Total CFU' = 'cfu_tot',
    'TSS' = 'tss') %>%
  select(!c(cfu_yel, cfu_gre))
```

# Correlation

```{r}
bo_cor<- rcorr(as.matrix(b), type = "spearman")
diag(bo_cor$P) <- 0

c2_cor<- rcorr(as.matrix(c), type = "spearman")
diag(c2_cor$P) <- 0

rd_cor<- rcorr(as.matrix(r), type = "spearman")
diag(rd_cor$P) <- 0
```

**Matrix Function**

```{r}
flattenCorrMatrix <- function(cormat, pmat) {
  ut <- upper.tri(cormat)
  data.frame(
    row = rownames(cormat)[row(cormat)[ut]],
    column = rownames(cormat)[col(cormat)[ut]],
    cor  =(cormat)[ut],
    p = pmat[ut]
    )
}
```

**DF of P-Values**

```{r}
b<- flattenCorrMatrix(bo_cor$r, bo_cor$P)
c<- flattenCorrMatrix(c2_cor$r, c2_cor$P)
r<- flattenCorrMatrix(rd_cor$r, rd_cor$P)
```

# Plot

```{r, fig.width = 8, fig.height=8}
corrplot(bo_cor$r, type="upper", order = "alphabet",
         tl.col = "black",
         p.mat = bo_cor$P, sig.level = 0.05, insig = "blank",
         addCoef.col = "black",
         number.cex = 0.60,
         title = "BLIND OSO", mar = c(0,0,1,0))

corrplot(c2_cor$r, type="upper", order = "alphabet",
         tl.col = "black",
         p.mat = c2_cor$P, sig.level = 0.05, insig = "blank",
         addCoef.col = "black",
         number.cex = 0.60,
         title = "CANALS", mar = c(0,0,1,0))

corrplot(rd_cor$r, type="upper", order = "alphabet",
         tl.col = "black",
         p.mat = rd_cor$P, sig.level = 0.05, insig = "blank",
         addCoef.col = "black",
         number.cex = 0.60,
         title = "GULF", mar = c(0,0,1,0))

flattenCorrMatrix(bo_cor$r, bo_cor$P)
flattenCorrMatrix(c2_cor$r, c2_cor$P)
flattenCorrMatrix(rd_cor$r, rd_cor$P)
```

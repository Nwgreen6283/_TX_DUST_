---
title: "Untitled"
format:
  html:
    theme: default
---

**After Wrangling qPCR triplicate data, run this code to get point shape etc. And then run boxplot codde**

#### Library

```{r}
library(tidyverse)
library(here)
```

```{r}
here<- here::here
select<- dplyr::select
rename<- dplyr::rename
```

#### Data

```{r, include = FALSE}
d<- read_csv(here('data', 'processed_data', 'qpcr', 'LOD', 'analytical_lod_values.csv'))
va<- read_csv(here('data', 'processed_data',  'ANOVA Data', 'va_anova.csv'))
vc<- read_csv(here('data', 'processed_data', 'ANOVA Data', 'vc_anova.csv'))
vp<- read_csv(here('data', 'processed_data', 'ANOVA Data', 'vp_anova.csv'))
vv<- read_csv(here('data', 'processed_data', 'ANOVA Data', 'vv_anova.csv'))
```

#### What are the LOD?

**These are sourced from the LOD code and are in copies/µL: This is what is reported in paper**

| Target         | LOD (copies/µL) | µL of DNA Template |
|----------------|-----------------|--------------------|
| Total Vibrio   | 1.49            | 2.5                |
| Va             | 7.08            | 1.2                |
| Vc             | 11.4            | 1.5                |
| Vp             | 0.672           | 1.2                |
| Vv             | 0.91            | 1.2                |
| Total Bacteria | 16.5            | 2.5                |
| HF183          | 0.91            | 5                  |

**Note that Vv, Vp, ad HF183 are all below 1 copy/µL which is not feasible. For these assays, a theoretical LOD will be applied (3 copies/µL) in the table below (d1)**

#### Convert from copies/µL to copies/assay

```{r}
#d1<-
 # d %>%
 # mutate(assay_LOD = copies_LOD*dna, #Methodical LOD (copies/assay)
        # non_detect = 0.5*assay_LOD) #Values to make for non-detects (50% of a_LOD)

#print(d1)
```

**Define LOD (as copies/µL) from table above**

```{r}
bact_LOD<- 16.5
vib_LOD<- 1.49
va_LOD<- 7.08
vc_LOD<- 11.4
vp_LOD<- 3
vv_LOD<- 3
hf_LOD<- 3
```

# Make Dataframe with above and below LOD

**This is for species bar plots (open circles will indicate all triplicates fell below LOD**

```{r}
va1<-
  va %>%
  mutate(LOD = case_when(
    copies_uL1 < va_LOD ~ "1", TRUE ~ "0"), #1 indicates it is below LOD
         sit = substr(Sample,0,1),
         site = recode(sit, "B" = "Blind Oso",
                        "C" = "Canals", 
                       "R" = "Gulf"),
         day = substr(Sample,2,3),
         date = case_when(day == "7"~"2022-07-07",
                         day ==  "8"~"2022-07-08",
                         day ==  "9"~"2022-07-09",
                         day ==  "11"~"2022-07-11",
                         day == "12"~"2022-07-12",
                         day ==  "13"~"2022-07-13",
                         day ==  "14"~"2022-07-14",
                         day ==  "15"~"2022-07-15",
                         day ==  "16"~"2022-07-16",
                         day == "17"~"2022-07-17",
                         day ==  "18"~"2022-07-18",
                         day == "19"~"2022-07-19")) %>%
  dplyr::select(date,site,LOD) %>%
  mutate(LOD = as.numeric(LOD))

va2<- aggregate(LOD ~ site + date, data = va1, FUN = sum) 

va3<- va1 %>%
  full_join(va2, by = c("site", "date")) %>%
  dplyr::rename("LOD" = "LOD.y") %>%
  select(site, date, LOD ) %>%
  mutate(point_shape = case_when(LOD ==3 ~1, TRUE ~ 16),#If all three were below LOD (so n = 3), then it will be shape #1 or open circle
         per_pos = case_when(LOD ==3 ~ 0,
                             LOD == 2 ~0.33,
                             LOD == 1 ~ 0.66,
                             LOD == 0 ~ 1)) %>% 
unique()

  
  
write_csv(va3, here('data', 'processed_data', 'qpcr','LOD', 'va_above_below.csv' ))
```

```{r}
vc1<-
  vc %>%
  mutate(LOD = case_when(copies_uL < vc_LOD ~ "1", TRUE ~ "0"),
         sit = substr(Sample,1,2),
         site = recode(sit, 
                       "BO" = "Blind Oso",
                       "C2" = "Canals", 
                       "RD" = "Gulf")) %>%

  dplyr::select(date,site,LOD, Sample) %>%
  drop_na() %>%
  mutate(LOD = as.numeric(LOD))

vc2<- aggregate(LOD ~ site + date, data = vc1, FUN = sum) 

vc3<- vc1 %>%
  full_join(vc2, by = c("site", "date")) %>%
  dplyr::rename("LOD" = "LOD.y") %>%
  select(site, date, LOD ) %>%
  mutate(point_shape = case_when((LOD == 3 & site == "Canals") ~ 1,
                                 (LOD == 3 & site == "Gulf") ~ 1,
                                 (LOD == 5 & site == "Blind Oso") ~ 1, TRUE ~ 16),
         per_pos = case_when(LOD == 5 & site == "Blind Oso" ~ 0 ,
                             LOD == 4 & site == "Blind Oso" ~0.2,
                             LOD == 3 & site == "Blind Oso" ~ 0.4,
                             LOD == 2 & site == "Blind Oso" ~ 0.6,
                             LOD == 1 & site == "Blind Oso"  ~ 0.8,
                             LOD == 0 & site == "Blind Oso"  ~ 1,
                             LOD == 3 & site == "Canals"  ~ 0,
                             LOD == 2 & site == "Canals"  ~ 0.33,
                             LOD == 1 & site == "Canals"  ~ 0.66,
                             LOD == 0 & site == "Canals"  ~ 1,
                             LOD == 3 & site == "Gulf"  ~ 0,
                             LOD == 2 & site == "Gulf"  ~ 0.33,
                             LOD == 1 & site == "Gulf"  ~ 0.66,
                             LOD == 0 & site == "Gulf"  ~ 1,
                             )) %>% #If all three or 5 were below LOD (so n = 3 or n = 5), then it will be shape #1 or open circle. Else it will be shape #16 or closed cirlce
  unique()

  write_csv(vc3, here('data', 'processed_data', 'qpcr','LOD', 'vc_above_below.csv' )) 
```

```{r}
vp1<-
  vp %>%
  mutate(LOD = case_when(copies_uL < vp_LOD ~ "1", TRUE ~ "0"),
         sit = substr(Sample,1,2),
         site = recode(sit, 
                       "BO" = "Blind Oso",
                       "C2" = "Canals", 
                       "RD" = "Gulf"),
         day = substr(Sample,4,5),
         date = case_when(day == "7"~"2022-07-07",
                         day ==  "8"~"2022-07-08",
                         day ==  "9"~"2022-07-09",
                         day ==  "11"~"2022-07-11",
                         day == "12"~"2022-07-12",
                         day ==  "13"~"2022-07-13",
                         day ==  "14"~"2022-07-14",
                         day ==  "15"~"2022-07-15",
                         day ==  "16"~"2022-07-16",
                         day == "17"~"2022-07-17",
                         day ==  "18"~"2022-07-18",
                         day == "19"~"2022-07-19")) %>%
  dplyr::select(date,site,LOD) %>%
  mutate(LOD = as.numeric(LOD))

vp2<- aggregate(LOD ~ site + date, data = vp1, FUN = sum) 

vp3<- vp1 %>%
  full_join(vp2, by = c("site", "date")) %>%
  dplyr::rename("LOD" = "LOD.y") %>%
  select(site, date, LOD ) %>%
  mutate(point_shape = case_when(LOD ==3 ~1, TRUE ~ 16),
         per_pos = case_when(LOD ==3 ~ 0,
                             LOD == 2 ~0.33,
                             LOD == 1 ~ 0.66,
                             LOD == 0 ~ 1)) %>% #If all three were below LOD (so n = 3), then it will be shape #1 or open circle
  unique()

  write_csv(vp3, here('data', 'processed_data', 'qpcr','LOD', 'vp_above_below.csv' )) 
```

```{r}
vv1<-
  vv %>%
  mutate(LOD = case_when(copies_uL < vv_LOD ~ "1", TRUE ~ "0"),
         sit = substr(Sample,1,2),
         site = recode(sit, 
                       "BO" = "Blind Oso",
                       "C2" = "Canals", 
                       "RD" = "Gulf"),
         day = substr(Sample,4,5),
         date = case_when(day == "7"~"2022-07-07",
                         day ==  "8"~"2022-07-08",
                         day ==  "9"~"2022-07-09",
                         day ==  "11"~"2022-07-11",
                         day == "12"~"2022-07-12",
                         day ==  "13"~"2022-07-13",
                         day ==  "14"~"2022-07-14",
                         day ==  "15"~"2022-07-15",
                         day ==  "16"~"2022-07-16",
                         day == "17"~"2022-07-17",
                         day ==  "18"~"2022-07-18",
                         day == "19"~"2022-07-19")) %>%
  dplyr::select(date,site,LOD) %>%
  mutate(LOD = as.numeric(LOD))

vv2<- aggregate(LOD ~ site + date, data = vv1, FUN = sum) 

vv3<- vv1 %>%
  full_join(vv2, by = c("site", "date")) %>%
  dplyr::rename("LOD" = "LOD.y") %>%
  select(site, date, LOD ) %>%
  mutate(point_shape = case_when(LOD ==3 ~1, TRUE ~ 16),
         per_pos = case_when(LOD ==3 ~ 0,
                             LOD == 2 ~0.33,
                             LOD == 1 ~ 0.66,
                             LOD == 0 ~ 1)) %>%#If all three were below LOD (so n = 3), then it will be shape #1 or open circle
  unique()

  write_csv(vv3, here('data', 'processed_data', 'qpcr','LOD', 'vv_above_below.csv' )) 
```

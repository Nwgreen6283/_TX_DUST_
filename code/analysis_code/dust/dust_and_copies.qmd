---
title: "Dust_Copies_Plot"
format:
  html:
    theme: default
---

**This script is good for visualizing copies per mL data and dust data.** Library

```{r}
library(here)
library(tidyverse)
library(ggpubr)
library(Hmisc)#Lag function
```

## Load Data

```{r, include= FALSE}
dust_sum<-read_csv(here("data", "processed_data", "dust_conc", "dust_master.csv")) 
copies<- read_csv(here("data", "processed_data", "total_clean_copies.csv")) 
```

## Daily Data frames

```{r}
daily_dust_sum<- dust_sum %>%
  filter(between(date, as.Date('2022-07-07'), as.Date('2022-07-19'))) 

copies_d <- copies %>%
  filter(Type %in% "Daily") %>%
  mutate(site = recode(site, "BO" = "Blind Oso",
                             "C2" = "Canals",
                            "RD" = "Gulf"))

```

# Copies and Dust Plots

## Plot Daily Dust Concentration

```{r, include = FALSE}
dust_fig<- daily_dust_sum %>% ggplot() +geom_line(
  aes(x = date,
      y = t7sum),
  color = "#935d2e",
  size = 1)+
  theme_bw()+
  labs(
    x = "Date",
    y = "Dust (AOD)")+
  theme(
    axis.title.y = element_text(size = 15),
    axis.text.y = element_text(size = 10),
    axis.title.x = element_text(size = 15),
    axis.text.x = element_text(size = 10))
  

dust_fig
```

## Total Daily Vibrio

```{r, include = FALSE}
tot_vib<- copies_d %>% 
  filter(site %in% "Canals") %>%
  ggplot()+geom_line(
  aes(x = date,
      y = copies_mL,
      color = site),
  size = 1) +
  theme_bw()+
  labs(
    x = "Date",
    y = "Copies/mL",
    title = "Total Daily Vibrio at all Sites",
    color = "  Site") +
  theme(
    plot.title = element_text(hjust = 0.5, size = 20),  #center title
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.ticks.x = element_blank(),
    axis.title.y = element_text(size = 15),
    axis.text.y = element_text(size = 10),
    legend.position = c(0.1, 0.6),
    legend.background = element_rect(colour = 'black', fill = 'white', linetype='solid')) + #Moves legend onto plot 
  scale_color_manual(values = c("Blind Oso" = "#809C52",
                                "Canals" = "#ba4716",
                                "Gulf" = "4c848c"))

tot_vib
```

## Combine Dust and Copies

```{r}
fig<- ggarrange(tot_vib, dust_fig + font("x.text", size = 10), ncol = 1, nrow = 2,align = "v")

fig
```

# Dust Boxplots

#### Make new df

```{r}
master<- 
  dust_sum %>%
  left_join(copies_d) %>%
  select(date,site,copies_mL, t7sum)
```

#### Site-specific df

```{r}
bo<- 
  master %>%
  filter(site %in% "Blind Oso" | date %in% as.Date('2022-07-05') : as.Date('2022-07-06')) 
bo <- bo %>% mutate(lag = Lag(bo$t7sum, shift = 1)) %>% #Creates 1 day lag
  filter(date %in% as.Date('2022-07-07') : as.Date('2022-07-19'))

c2<- 
  master %>%
  filter(site %in% "Canals" | date %in% as.Date('2022-07-05') : as.Date('2022-07-06')) 
c2 <- c2 %>% mutate(lag = Lag(c2$t7sum, shift = 2)) %>% #Creates 2 day lag
  filter(date %in% as.Date('2022-07-07') : as.Date('2022-07-19'))

rd<- 
  master %>%
  filter(site %in% "Gulf" | date %in% as.Date('2022-07-05') : as.Date('2022-07-06')) 
rd <- rd %>% mutate(lag = Lag(rd$t7sum, shift = 2)) %>% #Creates 2 day lag
  filter(date %in% as.Date('2022-07-07') : as.Date('2022-07-19'))
```

#### Set dust threshold

```{r}
dust_jul<- 
  dust_sum %>%
  filter(date %in% as.Date('2022-07-01') : as.Date('2022-07-31')) #DF from Month of July
 
x<- mean(dust_jul$t7sum) #Finds the average of the t7sum for July. BO was chosen but any site can represent this since they all have the same dust values. We just dont want replicates so that is why we chose one site. 
#Anything = or > 'x' is a "high" dust event (t7sum)
```

#### Plot t7sum Dust in July

```{r}
dust_jul %>%
  ggplot() + geom_line(
    aes(
      x = date, 
      y = t7sum)) +
  theme_bw() +
  labs(
    x = "Date",
    y = "t7sum Dust (AOD)",
    title = "Dust AOD (t7sum) in July, 2022") +
  geom_hline(yintercept = x) + #Line represents dust_avg for July
  geom_vline(xintercept = as.Date('2022-07-07'), #Lines for Daily time series
             color = "darkblue")+
  geom_vline(xintercept = as.Date('2022-07-19'),
             color = "darkblue")
  
```

#### Create new Column indicating high or low dust

```{r}
bo<-
  bo %>%
  mutate(dustlevel = case_when(bo$lag >= x ~ "high",
                               bo$lag <= x ~ "low"))

c2<-
  c2 %>%
  mutate(dustlevel = case_when(c2$lag >= x ~ "high",
                               c2$lag < x ~ "low"))

rd<-
  rd %>%
  mutate(dustlevel = case_when(rd$lag >= x ~ "high",
                               rd$lag <= x ~ "low"))
```

#### Plot

```{r}
bo %>%
  ggplot() + geom_boxplot(
    aes(x = dustlevel,
        y = copies_mL,
        color = dustlevel))+
stat_compare_means(
  aes(x = dustlevel,
      y = copies_mL),
  label.x = 1.5,
  label.y = 76000,
  method = "t.test") +
  theme_bw() +
  labs(
    title = "Blind Oso")+                                        
  annotate("text",
           x = 1:length(table(bo$dustlevel)),
           y = aggregate(copies_mL ~ dustlevel, bo, median)[ , 2],
           label = table(bo$dustlevel),
           col = "red",
           vjust = - 1)

c2 %>%
  ggplot() + geom_boxplot(
    aes(x = dustlevel,
        y = copies_mL,
        color = dustlevel))+
stat_compare_means(
  aes(x = dustlevel,
      y = copies_mL),
  label.x = 1.5,
  label.y = 76000,
  method = "t.test")+
  theme_bw()+
  labs(
    title = "Canals")+
  theme(
    legend.position = "none") +                                        
  annotate("text",
           x = 1:length(table(c2$dustlevel)),
           y = aggregate(copies_mL ~ dustlevel, c2, median)[ , 2],
           label = table(c2$dustlevel),
           col = "red",
           vjust = - 1)

rd %>%
  ggplot() + geom_boxplot(
    aes(x = dustlevel,
        y = copies_mL,
        color = dustlevel))+
stat_compare_means(
  aes(x = dustlevel,
      y = copies_mL),
  label.x = 1.5,
  label.y = 76000,
  method = "t.test")+
  theme_bw()+
  labs(
    title = "Gulf")+
  theme(
    legend.position = "none") +                                        
  annotate("text",
           x = 1:length(table(rd$dustlevel)),
           y = aggregate(copies_mL ~ dustlevel, rd, median)[ , 2],
           label = table(rd$dustlevel),
           col = "red",
           vjust = - 1)
```

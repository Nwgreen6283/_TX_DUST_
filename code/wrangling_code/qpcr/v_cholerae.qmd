---
title: "Vc copies calc"
format:
  html:
    theme: default
---

**FOR DAILY AND MONTHLY VC WRANGLING**

# Libda

#### Libraries

```{r}
library(tidyverse)
library(here)
library(ggpubr)
select<- dplyr::select
mutate<- dplyr::mutate
here<-here::here
```

#### Load data

```{r, include = FALSE}
d<- read_csv(here("data", "raw_data", "qpcr", "vc", "vc_daily.csv"))
m<- read_csv(here("data", "raw_data", "qpcr", "vc","vc_mon.csv"))
bo<- read_csv(here("data", "raw_data","qpcr", "vc","vc_bo_daily_inh_and_reg_1_50.csv")) #Ran BO 1:50 reps 1-3
bo50<- read_csv(here("data", "raw_data","qpcr", "vc","vc_bo_daily_inh_and_reg_1_50_trial2.csv"))#BO 1:50 Reps 4&5
#b100<- read_csv(here("data", "raw_data","vc_bo_daily_inh_and_reg_1_100.csv")) #Ran 1:100: Removed (too dilute)
```

# Cleaning

#### Combine BO 1:50 Trials

These two runs are for a total of 5 reps since we had a lot of variability with them. Treat it as on data set.

```{r}
bo<-
  rbind(bo, bo50)
```

#### Create Site Column from Sample Name

```{r}
d<- d %>%
  mutate(site = substr(d$Sample,1,2)) 

m<- m %>%
  mutate(site = substr(m$Sample,1,2)) 

bo<- bo %>%
  mutate(site = substr(bo$Sample,1,2))

#b100<- b100 %>%
  #mutate(site = substr(Sample,1,2))
bo50<- bo50 %>%
  mutate(site = substr(Sample,1,2))
```

#### Make INH Dataset and save

```{r}
m1<- 
  m %>% 
  filter(!grepl('i', Sample)) #Take out inhibition samples

inh<-
  m %>%
  filter(
    grepl('i', m$Sample) |
    grepl('Pos', m$Content)) # & Content %in% "Pos Con") #Select Inhibition Samples

bo<-
  bo %>%
  filter(!grepl('i', Sample)) #Drops Inhibition samples

bo50<-
  bo50 %>%
  filter(!grepl('i', Sample)) #Drops Inhibition samples

saveRDS(inh, file = here("data", "processed_data", "vc_mon_inh.rds")) #Saves inhibition data set for analysis
```

#### Add Dilution Column and Filter column

```{r}
dilution<- d%>%
  mutate(dilution = case_when(site == "BO"~"10",#BO was 1:10
                              site  == "C2"~ "1",
                              site == "RD"~"1"),
         dilution = as.numeric(dilution))



filter<- dilution %>%
   mutate(filter_amt = case_when(
                          Sample == "BO7"~"100",
                          Sample == "BO8"~"100",
                          Sample == "BO9"~"100",
                          Sample == "BO9"~"100",
                          Sample == "BO11"~"100",
                          Sample == "BO12"~"50",
                          Sample == "BO13"~"50",
                          Sample == "BO14"~"50",
                          Sample == "BO15"~"50",
                          Sample == "BO16"~"30",
                          Sample == "BO17"~"30",
                          Sample == "BO18"~"30",
                          Sample == "BO19"~"30",
                              site  == "C2"~ "100",
                              site == "RD"~"100"),
          filter_amt = as.numeric(filter_amt)) 

dilution_m<- m1%>%
  mutate(dilution = case_when(site == "BO"~"1", #BO was 1:1
                              site  == "C2"~ "1",
                              site == "RD"~"1"),
         dilution = as.numeric(dilution))



filter_m<- dilution_m %>%
   mutate(
     day = substr(dilution_m$Sample, 4,7),
     filter_amt = case_when(
                          site == "BO" & day == 2 ~"100",
                          site == "BO" & day == 3 ~ "100",
                          site == "BO" & day == 4 ~ "100",
                          site == "BO" & day == '5_11' ~"100",
                          site == "BO" & day == '5_20' ~ "100",
                          site == "BO" & day == '5_24' ~ "100",
                          site == "BO" & day == 6 ~"100",
                          site == "BO" & day == 8~ "30",
                          site == "BO" & day == 9~"45",
                          site == "BO" & day == 10 ~ "60",
                          site == "BO" & day == 11~ "30",
                          site == "BO" & day == 12~ "60",
                          site  == "C2"~ "100",
                          site == "RD"~"100"),
        filter_amt = as.numeric(filter_amt))

dilution_bo<- bo%>%
  mutate(dilution = case_when(site == "BO"~"50"),  #BO was 1:50
         dilution = as.numeric(dilution))



filter_bo<- dilution_bo %>%
  mutate(
    day = substr(dilution_bo$Sample, 4,7),
    filter_amt = case_when(
                          Sample == "BO_7"~"100",
                          Sample == "BO_8"~"100",
                          Sample == "BO_9"~"100",
                          Sample == "BO_9"~"100",
                          Sample == "BO_11"~"100",
                          Sample == "BO_12"~"50",
                          Sample == "BO_13"~"50",
                          Sample == "BO_14"~"50",
                          Sample == "BO_15"~"50",
                          Sample == "BO_16"~"30",
                          Sample == "BO_17"~"30",
                          Sample == "BO_18"~"30",
                          Sample == "BO_19"~"30"),
          filter_amt = as.numeric(filter_amt)) 

dilution_bo50<- bo50%>%
  mutate(dilution = case_when(site == "BO"~"100"),  #BO was 1:100
         dilution = as.numeric(dilution))



filter_bo50<- dilution_bo50 %>%
  mutate(
    day = substr(dilution_bo50$Sample, 4,7),
    filter_amt = case_when(
                          Sample == "BO_7"~"100",
                          Sample == "BO_8"~"100",
                          Sample == "BO_9"~"100",
                          Sample == "BO_9"~"100",
                          Sample == "BO_11"~"100",
                          Sample == "BO_12"~"50",
                          Sample == "BO_13"~"50",
                          Sample == "BO_14"~"50",
                          Sample == "BO_15"~"50",
                          Sample == "BO_16"~"30",
                          Sample == "BO_17"~"30",
                          Sample == "BO_18"~"30",
                          Sample == "BO_19"~"30"),
          filter_amt = as.numeric(filter_amt)) 
```

Cq --> Copies/mL

```{r}
copies<- filter %>%
    mutate(
    log_sq = ((Cq-42.230)/-3.196), #Equation of the line to get log(SQ). Equation is 3/23/23. e6--> e1--> could make it better
    sq = 10^log_sq, #Unlog 
    copies_uL_extract = sq , #(Copies/uL of 1:10)*(1 if there was no sample dilution // *10 if there was a 1:10 dilution etc.)
    copies_assay = copies_uL_extract * 1.5,
    copies_assay= case_when((copies_assay == "NaN" | copies_assay < 17.1) ~ 8.55, #50% LOD
                     TRUE ~ copies_assay),
    copies_uL_extract = copies_assay / 1.5,
    concentration_factor = 100/filter_amt, #(Concentration factor = amount of eluted DNA from ZYMO) / (filter amount from vacuum filtration)
    copies_mL = copies_uL_extract*concentration_factor*dilution) 

copies_m<- filter_m %>%
    mutate(
    log_sq = ((Cq-42.230)/-3.196), #Equation of the line to get log(SQ). Equation is 3/23/23. e6 --> e1--> could make it better
    sq = 10^log_sq, #Unlog 
    copies_uL_extract = sq , #(Copies/uL of 1:10)*(1 if there was no sample dilution // *10 if there was a 1:10 dilution etc.)
    copies_assay = copies_uL_extract * 1.5,
    copies_assay= case_when((copies_assay == "NaN" | copies_assay < 17.1) ~ 8.55, #50% LOD
                     TRUE ~ copies_assay),
    copies_uL_extract = copies_assay / 1.5,
    concentration_factor = 100/filter_amt, #(Concentration factor = amount of eluted DNA from ZYMO) / (filter amount from vacuum filtration)
    copies_mL = copies_uL_extract*concentration_factor*dilution) %>%
dplyr::select(Sample,copies_mL, site,day)

copies_bo<- filter_bo %>%
    mutate(
    log_sq = ((Cq-42.230)/-3.196), #Equation of the line to get log(SQ). Equation is 3/23/23. e6 --> e1--> could make it better
    sq = 10^log_sq, #Unlog 
    copies_uL_extract = sq , #(Copies/uL of 1:10)*(1 if there was no sample dilution // *10 if there was a 1:10 dilution etc.) In this case it will be *50
    copies_assay = copies_uL_extract * 1.5,
    copies_assay= case_when((copies_assay == "NaN" | copies_assay < 17.1) ~ 8.55, #50% LOD
                     TRUE ~ copies_assay),
    copies_uL_extract = copies_assay / 1.5,
    concentration_factor = 100/filter_amt, #(Concentration factor = amount of eluted DNA from ZYMO) / (filter amount from vacuum filtration)
    copies_mL = copies_uL_extract*concentration_factor*dilution) 

copies_bo50<- filter_bo50 %>%
    mutate(
    log_sq = ((Cq-42.230)/-3.196), #Equation of the line to get log(SQ). Equation is 3/23/23. e6 --> e1--> could make it better
    sq = 10^log_sq, #Unlog 
    copies_uL_extract = sq , #(Copies/uL of 1:10)*(1 if there was no sample dilution // *10 if there was a 1:10 dilution etc.) In this case it will be *50
    copies_assay = copies_uL_extract * 1.5,
    copies_assay1= case_when((copies_assay == "NaN" | copies_assay < 17.1) ~ 8.55, #50% LOD
                     TRUE ~ copies_assay),
    copies_uL_extract = copies_assay / 1.5,
    concentration_factor = 100/filter_amt, #(Concentration factor = amount of eluted DNA from ZYMO) / (filter amount from vacuum filtration)
    copies_mL = copies_uL_extract*concentration_factor*dilution) %>%
dplyr::select(Sample,copies_mL, site,day)
```

#### %POs

11/36

```{r}
per_pos<- copies %>% 
  select(copies_assay,Sample) %>%
  filter(!grepl("BO",Sample)) %>%#get rid of old BO
  drop_na()

copies_bo1<-
  copies_bo %>%
  select(copies_assay,Sample) %>%
  mutate(Sample = sub("_", "", Sample)) %>%
  drop_na()
per_pos<-
rbind(copies_bo1, per_pos) %>%

mutate(lod = case_when(copies_assay < 17.1 ~ "bad", TRUE ~"good")) 

write_csv(per_pos,here('data', 'processed_data', 'qpcr', 'LOD', 'vc_copies_assay.csv'))
```

```{r}
copies<-
  copies %>%
dplyr::select(Sample,copies_mL, site)

copies_bo<- 
  copies_bo %>%
dplyr::select(Sample,copies_mL, site,day)
```

Replace NaN with 0 for copies/mL

<!--# There are no zeroes now, so this code is not needed. Just keeping it so i dont have to hange downstream code -->

```{r}
replace<- copies %>%
 mutate(copies_mL = ifelse(is.na(copies_mL), 0, copies_mL)) %>%
filter(!is.na(Sample))   
 #Dropping NAs from STD Curve

replace_m<- copies_m %>%
 mutate(copies_mL = ifelse(is.na(copies_mL), 0, copies_mL)) %>%
filter(!is.na(Sample))   
 #Dropping NAs from STD Curve

replace_bo<- copies_bo %>%
 mutate(copies_mL = ifelse(is.na(copies_mL), 0, copies_mL)) %>%
filter(!is.na(Sample))   
 #Dropping NAs from STD Curve

replace_bo50<- copies_bo50 %>%
 mutate(copies_mL = ifelse(is.na(copies_mL), 0, copies_mL)) %>%
filter(!is.na(Sample)) 
```

Date Column

```{r}
date<- replace %>%
  mutate(day = substr(replace$Sample,3,4)) %>% #Creates new column `date`
  mutate(date = case_when(day == "7"~"2022-07-07",
                         day ==  "8"~"2022-07-08",
                         day ==  "9"~"2022-07-09",
                         day ==  "11"~"2022-07-11",
                         day == "12"~"2022-07-12",
                         day ==  "13"~"2022-07-13",
                         day ==  "14"~"2022-07-14",
                         day ==  "15"~"2022-07-15",
                         day ==  "16"~"2022-07-16",
                         day == "17"~"2022-07-17",
                         day ==  "18"~"2022-07-18",
                         day == "19"~"2022-07-19"))

date_m<- replace_m %>%
 mutate(date = case_when(day == "2"~"2022-02-16",
                         day ==  "3"~"2022-03-09",
                         day ==  "4"~"2022-04-20",
                         day ==  "5_11"~"2022-05-11",
                         day == "5_20"~"2022-05-20",
                         day ==  "5_24"~"2022-05-24",
                         day ==  "6"~"2022-06-14",
                         day ==  "8"~"2022-08-09",
                         day ==  "9"~"2022-09-13",
                         day == "10"~"2022-10-18",
                         day ==  "11"~"2022-11-15",
                         day == "12"~"2022-12-14"))

date_bo<- replace_bo %>%
  mutate(date = case_when(day == "7"~"2022-07-07",
                         day ==  "8"~"2022-07-08",
                         day ==  "9"~"2022-07-09",
                         day ==  "11"~"2022-07-11",
                         day == "12"~"2022-07-12",
                         day ==  "13"~"2022-07-13",
                         day ==  "14"~"2022-07-14",
                         day ==  "15"~"2022-07-15",
                         day ==  "16"~"2022-07-16",
                         day == "17"~"2022-07-17",
                         day ==  "18"~"2022-07-18",
                         day == "19"~"2022-07-19"))

date_bo50<- replace_bo50 %>%
  mutate(date = case_when(day == "7"~"2022-07-07",
                         day ==  "8"~"2022-07-08",
                         day ==  "9"~"2022-07-09",
                         day ==  "11"~"2022-07-11",
                         day == "12"~"2022-07-12",
                         day ==  "13"~"2022-07-13",
                         day ==  "14"~"2022-07-14",
                         day ==  "15"~"2022-07-15",
                         day ==  "16"~"2022-07-16",
                         day == "17"~"2022-07-17",
                         day ==  "18"~"2022-07-18",
                         day == "19"~"2022-07-19"))
```

#### Save for ANOVA

```{r}
bo_triplicate_new<-
  date %>%
  filter(!site %in% "BO") %>%
  full_join(date_bo)
write_csv(bo_triplicate_new, here('data', 'processed_data', 'ANOVA Data', 'vc_anova.csv'))
```

Take the average of qPCR triplicates

```{r}
final<- date %>% 
  group_by(site, Sample,date) %>% #Group all chr together. All that should be left out is the numeric vector we want to work with (in this case, copies_mL)
  summarize_if(is.numeric, mean) %>%
  ungroup() %>% #Ungroup to spit everything back out 
  select(date,copies_mL,site)

final_m<- date_m %>% 
  group_by(site, Sample,date, day) %>% #Group all chr together. All that should be left out is the numeric vector we want to work with (in this case, copies_mL)
  summarize_if(is.numeric, mean) %>%
  ungroup() %>% #Ungroup to spit everything back out 
  select(date,copies_mL,site)

final_bo<- date_bo %>% 
  group_by(site, Sample,date) %>% #Group all chr together. All that should be left out is the numeric vector we want to work with (in this case, copies_mL)
  summarize_if(is.numeric, mean) %>%
  ungroup() %>% #Ungroup to spit everything back out 
  select(date,copies_mL,site)

final_bo50<- date_bo50 %>% 
  group_by(site, Sample,date) %>% #Group all chr together. All that should be left out is the numeric vector we want to work with (in this case, copies_mL)
  summarize_if(is.numeric, mean) %>%
  ungroup() %>% #Ungroup to spit everything back out 
  select(date,copies_mL,site)
```

Save as RDS and manually add date in excel

```{r}
#stop() #Write error so it wont overwrite
write.csv(final, file= here("data","processed_data","vc_clean_copies_daily.csv"))

write.csv(final_m, file= here("data","processed_data","vc_clean_copies_mon.csv"))

write.csv(final_bo, file= here("data","processed_data","vc_clean_copies_dail_1_50.csv")) #All 5 reps 

write.csv(final_bo50, file= here("data","processed_data","vc_clean_copies_daily_1_50_2reps.csv")) #Reps 4&5
```

#### Clean BO dataset

```{r}
new_bo<-
  final %>%
  filter(!site %in% "BO") %>% #Get rid of old BO
  full_join(final_bo)

vc_final<-
  full_join(new_bo, final_m)

write_csv(vc_final, here('data', 'processed_data', 'qpcr', 'for_real', 'vc_final.csv')) 
```

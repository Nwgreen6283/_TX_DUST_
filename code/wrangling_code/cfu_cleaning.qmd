---
title: "cfu cleaning"
format:
  html:
    theme: default
---

# Intro

#### Libraries

```{r, include = FALSE}
library(here)
library(tidyverse)
```

#### Data

```{r, include = FALSE}
cfu<- read_csv(here("data", "raw_data", "cfu.csv"))
```

# Clean

#### Rename

```{r}
cfu<-
  cfu %>%
  rename("site" = "Location",
         "date" = "Date of sample collection",
         "sample" = "Sample name",
         "yel_col" = "Number of Yellow colony",
         "gre_col" = "Number of Green colony",
         "tot_col" = "Total colonies",
         "dilution_factor" = "Dilution Factor (Final volume/Initial volume)",
         "vol_plated" = "Volume of sample plated in mL",
         "cfu_mL" = "Total CFU/mL",
         "cfu_yel" = "CFU/mL Yellow",
         "cfu_gre" = "CFU/mL Green") %>%
  mutate(site = recode(site, "BO" = "BO",
                       "Canal 2" = "C2",
                       "PCS" = "RD",
                       "RD6" = "RD"))


  
```

#### Select

```{r}
cfu<-
  cfu %>%
  select(1:13) %>%
  select(!`CFU conting date, after 24 hr incubation`)
```

#### Remove Negatives: MilliQ and DI

```{r}
cfu<-
  cfu %>%
  filter(!site %in% c("1 X PBS", "Milli Q"))
```

#### Choose Dilution factors w/ least variability

<!--# Need to be careful here. Check with Erin on choosing this. -->

```{r}
cfu<-
  cfu %>%
  filter(variation %in% "g") %>% #Manually added 'g' that denotes dilution with least variation
  select(!variation)
```

#### Create Column with average CFUs by site and date

<!--# If i kept the individual CFU measurements (triplicates by date) then there would be three repeititve measurements per date and this impactgs downstream stats.  -->

```{r}
avg<-
  cfu %>% 
  group_by(site,date) %>% 
  summarise(mean(cfu_mL)) 

avg_gre<-
  cfu %>%
  group_by(site, date) %>%
  summarise(mean(cfu_gre))

avg_yel<-
  cfu %>%
  group_by(site, date) %>%
  summarise(mean(cfu_yel))

avg_all<- list(avg, avg_gre, avg_yel)

cfu<-
  avg_all %>% reduce(full_join, by = c('site','date')) %>%
  select(site, date, `mean(cfu_mL)`, `mean(cfu_gre)`, `mean(cfu_yel)`) %>%
  rename("cfu_tot" = "mean(cfu_mL)",
         "cfu_gre" = "mean(cfu_gre)",
         "cfu_yel" = "mean(cfu_yel)")

```

# Save as RDS

```{r}
saveRDS(cfu, here("data", "processed_data", "cfu", "cfu.rds"))
```
